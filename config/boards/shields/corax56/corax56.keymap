#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEF     0
#define NAV     1
#define NUM     2
#define SYM     3
#define GAM     4

// Timing constants and Hyper/Meh keys
#define HYP LC(LA(LS(LGUI)))
#define MEH LC(LA(LSHFT))
#define COMBO_TIMEOUT 25
#define COMBO_PRIOR_IDLE 100
#define TAP_DANCE_TAPPING_TERM 250
#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 100

// positional key values 
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 28 36 37 38 39 40 41
#define KEYS_R 5 6 7 8 9 16 17 18 19 20 21 29 30 31 32 33 34 35 44 45 46 47 48 49
#define KEYS_T 50 51 52 53 54 55 56 57
#define KEYS_S 42 43

// Caps word will continue to remain active after these keys
&caps_word {
    continue-list = <UNDERSCORE MINUS LS(MINUS) UP DOWN LEFT RIGHT BSPC DEL>;
};

/ {

    behaviors {

        // Homerow Mods allowing use of modifiers on the home row
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            /* hold-trigger-on-release; */
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behaviour-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            /* hold-trigger-on-release; */
        };
        
        // Layers that are activated when holding a thumb row key
        trl: thumb_row_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "thumb_row_layer";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        // Tap-dance allowing easy switch between mac default layer and gaming layer
        td_gaming: tap_dance_gaming {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_gaming";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_DANCE_TAPPING_TERM>;
            bindings = <&to DEF>, <&to GAM>;
        };

        // Tap-dance allowing easy switch between capsword and capslock
        td_caps: tap_dance_capsword_capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_caps_word_caps_lock";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_DANCE_TAPPING_TERM>;
            bindings = <&caps_word>, <&kp CAPSLOCK>;
        };
    };

    combos {
      compatible = "zmk,combos";

      combo_tab {
        timeout-ms = <COMBO_TIMEOUT>;
        require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        key-positions = <12 13>;
        layers = <DEF>;
        slow-release;
        bindings = <&kp TAB>;
      };

      combo_return {
        timeout-ms = = <COMBO_TIMEOUT>;
        require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        key-positions = <25 26>;
        layers = <DEF>;
        slow-release;
        bindings = <&kp RET>;
      };

    };

    keymap {
      compatible = "zmk,keymap";

      default_layer {
        label = "DEF";
        bindings = <
//                             ┌──────────────┬───────────────┬──────────────┬───────────────┬─────────────┐                                   ┌──────────────┬───────────────┬──────────────┬───────────────┬─────────────────┐                        
//                             │    &kp N1    │    &kp N2     │    &kp N3    │    &kp N4     │   &kp N5    │                                   │    &kp N6    │    &kp N7     │    &kp N8    │    &kp N9     │     &kp N0      │                        
//               ┌─────────────┼──────────────┼───────────────┼──────────────┼───────────────┼─────────────┤                                   ├──────────────┼───────────────┼──────────────┼───────────────┼─────────────────┼───────────┐            
//               │  &kp GRAVE  │    &kp Q     │     &kp W     │    &kp E     │     &kp R     │    &kp T    │                                   │    &kp Y     │     &kp U     │    &kp I     │     &kp O     │      &kp P      │ &kp MINUS │            
//    ┌──────────┼─────────────┼──────────────┼───────────────┼──────────────┼───────────────┼─────────────┤                                   ├──────────────┼───────────────┼──────────────┼───────────────┼─────────────────┼───────────┼───────────┐
//    │ &td_caps │   &kp ESC   │ &hm_l LALT A │ &hm_l LCTRL S │ &hm_l LGUI D │ &hm_l LSHFT F │ &hm_l MEH G │                                   │ &hm_r MEH H  │ &hm_r RSHFT J │ &hm_r RGUI K │ &hm_r RCTRL L │ &hm_r RALT SEMI │  &kp SQT  │ &kp EQUAL │
//    └──────────┼─────────────┼──────────────┼───────────────┼──────────────┼───────────────┼─────────────┼────────────────┬──────────────────┼──────────────┼───────────────┼──────────────┼───────────────┼─────────────────┼───────────┼───────────┘
//               │ &key_repeat │    &kp Z     │     &kp X     │    &kp C     │     &kp V     │    &kp B    │   &kp C_MUTE   │ &kp C_PLAY_PAUSE │    &kp N     │     &kp M     │  &kp COMMA   │    &kp DOT    │    &kp FSLH     │ &kp BSLH  │            
//               └─────────────┴──────────────┴───────────────┼──────────────┼───────────────┼─────────────┼────────────────┼──────────────────┼──────────────┼───────────────┼──────────────┼───────────────┴─────────────────┴───────────┘            
//                                                            │  &td_gaming  │    &kp ESC    │   &kp TAB   │ &trl NAV SPACE │  &trl NUM BSPC   │ &trl SYM RET │    &kp DEL    │    &none     │                                                          
//                                                            └──────────────┴───────────────┴─────────────┴────────────────┴──────────────────┴──────────────┴───────────────┴──────────────┘                                                          
                           &kp N1         &kp N2          &kp N3         &kp N4          &kp N5                                            &kp N6         &kp N7          &kp N8         &kp N9          &kp N0                                 
             &kp GRAVE     &kp Q          &kp W           &kp E          &kp R           &kp T                                             &kp Y          &kp U           &kp I          &kp O           &kp P             &kp MINUS            
  &td_caps   &kp ESC       &hm_l LALT A   &hm_l LCTRL S   &hm_l LGUI D   &hm_l LSHFT F   &hm_l MEH G                                       &hm_r MEH H    &hm_r RSHFT J   &hm_r RGUI K   &hm_r RCTRL L   &hm_r RALT SEMI   &kp SQT     &kp EQUAL
             &key_repeat   &kp Z          &kp X           &kp C          &kp V           &kp B         &kp C_MUTE       &kp C_PLAY_PAUSE   &kp N          &kp M           &kp COMMA      &kp DOT         &kp FSLH          &kp BSLH             
                                                          &td_gaming     &kp ESC         &kp TAB       &trl NAV SPACE   &trl NUM BSPC      &trl SYM RET   &kp DEL         &none                                                                 
        >;

        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_BRI_DN C_BRI_UP>;
      };

    navigation_layer {
      label = "NAV";
      bindings = <
//                                ┌───────────────┬──────────────┬──────────────┬──────────────┬──────────────┐                           ┌──────────────────┬──────────────┬───────────────┬───────────────────┬─────────────┐                                    
//                                │ &bt BT_SEL 0  │ &bt BT_SEL 1 │ &bt BT_SEL 2 │ &bt BT_SEL 3 │ &bt BT_SEL 4 │                           │      &none       │    &none     │     &none     │       &none       │    &none    │                                    
//                 ┌──────────────┼───────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                           ├──────────────────┼──────────────┼───────────────┼───────────────────┼─────────────┼───────────────┐                    
//                 │  &sys_reset  │ &kp LG(LS(Z)) │  &kp LG(X)   │  &kp LG(C)   │  &kp LG(V)   │  &kp LG(Z)   │                           │    &kp PG_DN     │   &kp HOME   │    &kp END    │     &kp PG_UP     │    &none    │  &sys_reset   │                    
//    ┌────────────┼──────────────┼───────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                           ├──────────────────┼──────────────┼───────────────┼───────────────────┼─────────────┼───────────────┼───────────────────┐
//    │ &bt BT_CLR │    &none     │   &kp LALT    │  &kp LCTRL   │   &kp LGUI   │  &kp LSHFT   │   &kp MEH    │                           │     &kp LEFT     │   &kp DOWN   │    &kp UP     │     &kp RIGHT     │    &none    │     &none     │ &ext_power EP_TOG │
//    └────────────┼──────────────┼───────────────┼──────────────┼──────────────┼──────────────┼──────────────┼─────────────┬─────────────┼──────────────────┼──────────────┼───────────────┼───────────────────┼─────────────┼───────────────┼───────────────────┘
//                 │ &out OUT_TOG │   &kp BSPC    │   &kp ESC    │   &kp TAB    │  &kp SPACE   │   &kp RET    │ &bootloader │ &bootloader │ &kp LS(LA(LEFT)) │ &kp LA(LEFT) │ &kp LA(RIGHT) │ &kp LS(LA(RIGHT)) │ &kp C_POWER │ &kp C_AL_LOCK │                    
//                 └──────────────┴───────────────┴──────────────┼──────────────┼──────────────┼──────────────┼─────────────┼─────────────┼──────────────────┼──────────────┼───────────────┼───────────────────┴─────────────┴───────────────┘                    
//                                                               │    &none     │    &none     │    &none     │    &none    │  &kp BSPC   │     &kp RET      │   &kp DEL    │     &none     │                                                                      
//                                                               └──────────────┴──────────────┴──────────────┴─────────────┴─────────────┴──────────────────┴──────────────┴───────────────┘                                                                      
                              &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                               &none              &none          &none           &none               &none                                          
               &sys_reset     &kp LG(LS(Z))   &kp LG(X)      &kp LG(C)      &kp LG(V)      &kp LG(Z)                                  &kp PG_DN          &kp HOME       &kp END         &kp PG_UP           &none         &sys_reset                       
  &bt BT_CLR   &none          &kp LALT        &kp LCTRL      &kp LGUI       &kp LSHFT      &kp MEH                                    &kp LEFT           &kp DOWN       &kp UP          &kp RIGHT           &none         &none           &ext_power EP_TOG
               &out OUT_TOG   &kp BSPC        &kp ESC        &kp TAB        &kp SPACE      &kp RET        &bootloader   &bootloader   &kp LS(LA(LEFT))   &kp LA(LEFT)   &kp LA(RIGHT)   &kp LS(LA(RIGHT))   &kp C_POWER   &kp C_AL_LOCK                    
                                                             &none          &none          &none          &none         &kp BSPC      &kp RET            &kp DEL        &none                                                                              
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

    number_layer {
      label = "NUM";
      bindings = <
//                    ┌───────────┬────────┬────────┬─────────┬───────────┐                ┌─────────┬────────────┬──────────┬───────────┬──────────┐                    
//                    │  &kp F1   │ &kp F2 │ &kp F3 │ &kp F4  │  &kp F5   │                │ &kp F6  │   &kp F7   │  &kp F8  │  &kp F9   │ &kp F10  │                    
//            ┌───────┼───────────┼────────┼────────┼─────────┼───────────┤                ├─────────┼────────────┼──────────┼───────────┼──────────┼─────────┐          
//            │ &none │ &kp GRAVE │ &kp N7 │ &kp N8 │ &kp N9  │ &kp BSLH  │                │  &none  │   &none    │  &none   │   &none   │  &none   │ &kp F11 │          
//    ┌───────┼───────┼───────────┼────────┼────────┼─────────┼───────────┤                ├─────────┼────────────┼──────────┼───────────┼──────────┼─────────┼─────────┐
//    │ &none │ &none │  &kp SQT  │ &kp N4 │ &kp N5 │ &kp N6  │ &kp EQUAL │                │ &kp MEH │ &kp RSHIFT │ &kp RGUI │ &kp RCTRL │ &kp RALT │  &none  │ &kp F12 │
//    └───────┼───────┼───────────┼────────┼────────┼─────────┼───────────┼────────┬───────┼─────────┼────────────┼──────────┼───────────┼──────────┼─────────┼─────────┘
//            │ &none │ &kp LBKT  │ &kp N1 │ &kp N2 │ &kp N3  │ &kp RBKT  │ &none  │ &none │  &none  │   &none    │  &none   │   &none   │  &none   │  &none  │          
//            └───────┴───────────┴────────┼────────┼─────────┼───────────┼────────┼───────┼─────────┼────────────┼──────────┼───────────┴──────────┴─────────┘          
//                                         │ &none  │ &kp ESC │ &kp MINUS │ &kp N0 │ &none │  &none  │   &none    │  &none   │                                           
//                                         └────────┴─────────┴───────────┴────────┴───────┴─────────┴────────────┴──────────┘                                           
                  &kp F1      &kp F2   &kp F3   &kp F4    &kp F5                       &kp F6    &kp F7       &kp F8     &kp F9      &kp F10                     
          &none   &kp GRAVE   &kp N7   &kp N8   &kp N9    &kp BSLH                     &none     &none        &none      &none       &none      &kp F11          
  &none   &none   &kp SQT     &kp N4   &kp N5   &kp N6    &kp EQUAL                    &kp MEH   &kp RSHIFT   &kp RGUI   &kp RCTRL   &kp RALT   &none     &kp F12
          &none   &kp LBKT    &kp N1   &kp N2   &kp N3    &kp RBKT    &none    &none   &none     &none        &none      &none       &none      &none            
                                       &none    &kp ESC   &kp MINUS   &kp N0   &none   &none     &none        &none                                              
      >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_BRI_DN C_BRI_UP>;
    };

    symbol_layer {
      label = "SYM";
      bindings = <
//                    ┌───────────┬──────────┬──────────┬────────────┬───────────┐                  ┌─────────┬──────────┬───────────┬──────────┬───────────┐                
//                    │   &none   │  &none   │  &none   │   &none    │   &none   │                  │  &none  │  &none   │   &none   │  &none   │   &none   │                
//            ┌───────┼───────────┼──────────┼──────────┼────────────┼───────────┤                  ├─────────┼──────────┼───────────┼──────────┼───────────┼───────┐        
//            │ &none │ &kp TILDE │ &kp LBKT │ &kp RBKT │ &kp DOLLAR │ &kp PIPE  │                  │  &none  │  &none   │   &none   │  &none   │   &none   │ &none │        
//    ┌───────┼───────┼───────────┼──────────┼──────────┼────────────┼───────────┤                  ├─────────┼──────────┼───────────┼──────────┼───────────┼───────┼───────┐
//    │ &none │ &none │  &kp DQT  │ &kp LPAR │ &kp RPAR │ &kp CARET  │ &kp PLUS  │                  │ &kp MEH │ &kp RGUI │ &kp RSHFT │ &kp RALT │ &kp RCTRL │ &none │ &none │
//    └───────┼───────┼───────────┼──────────┼──────────┼────────────┼───────────┼──────────┬───────┼─────────┼──────────┼───────────┼──────────┼───────────┼───────┼───────┘
//            │ &none │ &kp AMPS  │ &kp LBRC │ &kp RBRC │  &kp HASH  │ &kp MINUS │  &none   │ &none │  &none  │  &none   │   &none   │  &none   │   &none   │ &none │        
//            └───────┴───────────┴──────────┼──────────┼────────────┼───────────┼──────────┼───────┼─────────┼──────────┼───────────┼──────────┴───────────┴───────┘        
//                                           │  &none   │  &kp ESC   │ &kp UNDER │ &kp RPAR │ &none │  &none  │  &none   │   &none   │                                       
//                                           └──────────┴────────────┴───────────┴──────────┴───────┴─────────┴──────────┴───────────┘                                       
                  &none       &none      &none      &none        &none                          &none     &none      &none       &none      &none                    
          &none   &kp TILDE   &kp LBKT   &kp RBKT   &kp DOLLAR   &kp PIPE                       &none     &none      &none       &none      &none       &none        
  &none   &none   &kp DQT     &kp LPAR   &kp RPAR   &kp CARET    &kp PLUS                       &kp MEH   &kp RGUI   &kp RSHFT   &kp RALT   &kp RCTRL   &none   &none
          &none   &kp AMPS    &kp LBRC   &kp RBRC   &kp HASH     &kp MINUS   &none      &none   &none     &none      &none       &none      &none       &none        
                                         &none      &kp ESC      &kp UNDER   &kp RPAR   &none   &none     &none      &none                                           
      >;

       sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_BRI_DN C_BRI_UP>;
     };

     gaming_layer {
       label = "GAM";
       bindings = <
//                            ┌────────┬────────┬────────────┬──────────────┬──────────┐                           ┌──────────────┬─────────┬───────────┬─────────┬──────────┐                        
//                            │ &kp N1 │ &kp N2 │   &kp N3   │    &kp N4    │  &kp N5  │                           │    &kp N6    │ &kp N7  │  &kp N8   │ &kp N9  │  &kp N0  │                        
//                ┌───────────┼────────┼────────┼────────────┼──────────────┼──────────┤                           ├──────────────┼─────────┼───────────┼─────────┼──────────┼───────────┐            
//                │  &kp TAB  │ &kp Q  │ &kp W  │   &kp E    │    &kp R     │  &kp T   │                           │    &kp Y     │  &kp U  │   &kp I   │  &kp O  │  &kp P   │ &kp MINUS │            
//    ┌───────────┼───────────┼────────┼────────┼────────────┼──────────────┼──────────┤                           ├──────────────┼─────────┼───────────┼─────────┼──────────┼───────────┼───────────┐
//    │ &kp GRAVE │ &kp LSHFT │ &kp A  │ &kp S  │   &kp D    │    &kp F     │  &kp G   │                           │    &kp H     │  &kp J  │   &kp K   │  &kp L  │ &kp SEMI │  &kp SQT  │ &kp EQUAL │
//    └───────────┼───────────┼────────┼────────┼────────────┼──────────────┼──────────┼───────────┬───────────────┼──────────────┼─────────┼───────────┼─────────┼──────────┼───────────┼───────────┘
//                │ &kp LCTRL │ &kp Z  │ &kp X  │   &kp C    │    &kp V     │  &kp B   │  &kp RET  │     &none     │    &kp N     │  &kp M  │ &kp COMMA │ &kp DOT │ &kp FSLH │ &kp BSLH  │            
//                └───────────┴────────┴────────┼────────────┼──────────────┼──────────┼───────────┼───────────────┼──────────────┼─────────┼───────────┼─────────┴──────────┴───────────┘            
//                                              │ &td_gaming │ &hm LALT ESC │ &kp LGUI │ &kp SPACE │ &trl NUM BSPC │ &trl SYM RET │ &kp DEL │   &none   │                                             
//                                              └────────────┴──────────────┴──────────┴───────────┴───────────────┴──────────────┴─────────┴───────────┘                                             
                          &kp N1   &kp N2   &kp N3       &kp N4         &kp N5                                 &kp N6         &kp N7    &kp N8      &kp N9    &kp N0                          
              &kp TAB     &kp Q    &kp W    &kp E        &kp R          &kp T                                  &kp Y          &kp U     &kp I       &kp O     &kp P      &kp MINUS            
  &kp GRAVE   &kp LSHFT   &kp A    &kp S    &kp D        &kp F          &kp G                                  &kp H          &kp J     &kp K       &kp L     &kp SEMI   &kp SQT     &kp EQUAL
              &kp LCTRL   &kp Z    &kp X    &kp C        &kp V          &kp B      &kp RET     &none           &kp N          &kp M     &kp COMMA   &kp DOT   &kp FSLH   &kp BSLH             
                                            &td_gaming   &hm LALT ESC   &kp LGUI   &kp SPACE   &trl NUM BSPC   &trl SYM RET   &kp DEL   &none                                                 
       >;

       sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_BRI_DN C_BRI_UP>;
     };

   };
};
